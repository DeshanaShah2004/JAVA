/*
Question:
Design a class BankAccount with proper encapsulation:
Private fields: accountNumber (String), balance (double).
Public methods:
deposit(double amount) → increases balance only if amount > 0.
withdraw(double amount) → decreases balance only if sufficient funds exist.
getBalance() → returns the current balance.
getAccountNumber() → returns account number (no setter, account number shouldn’t change once assigned).
Task:
In main(), create a BankAccount with an initial balance.
Perform deposits and withdrawals, printing results.
Ensure encapsulation prevents direct modification of balance.
*/

class BankAccount {
    // private fields (encapsulation)
    private String accountNumber;
    private double balance;

    // constructor to set account number and initial balance
    public BankAccount(String accountNumber, double initialBalance) {
        this.accountNumber = accountNumber;
        if (initialBalance >= 0) {
            this.balance = initialBalance;
        } else {
            this.balance = 0;
            System.out.println("Initial balance cannot be negative. Setting balance to 0.");
        }
    }

    // deposit method
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited: " + amount);
        } else {
            System.out.println("Deposit amount must be positive.");
        }
    }

    // withdraw method
    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Withdrew: " + amount);
        } else if (amount > balance) {
            System.out.println("Insufficient funds. Withdrawal failed.");
        } else {
            System.out.println("Withdrawal amount must be positive.");
        }
    }

    // getter for balance
    public double getBalance() {
        return balance;
    }

    // getter for account number (no setter to protect immutability)
    public String getAccountNumber() {
        return accountNumber;
    }
}

public class Main {
    public static void main(String[] args) {
        // create bank account
        BankAccount account = new BankAccount("CCE22039", 22039.0);

        System.out.println("Account Number: " + account.getAccountNumber());
        System.out.println("Initial Balance: " + account.getBalance());

        // deposit money
        account.deposit(200);
        System.out.println("Balance after deposit: " + account.getBalance());

        // withdraw money
        account.withdraw(100);
        System.out.println("Balance after withdrawal: " + account.getBalance());

        // try to withdraw more than balance
        account.withdraw(700);

        // try invalid deposit
        account.deposit(-50);

        // final balance
        System.out.println("Final Balance: " + account.getBalance());
    }
}
